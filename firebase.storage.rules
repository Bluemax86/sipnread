
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    // Checks if the currently authenticated user is the owner of a document,
    // based on a userId passed to the function (typically from resource.data.userId or the document ID).
    function isOwner(docUserId) {
      return isSignedIn() && request.auth.uid == docUserId;
    }

    // Retrieves the role of a specified user from their profile document.
    function getUserRole(userIdToGetRoleFor) {
      // Ensure that the path to the profile document is correct.
      // $(database) refers to the current database.
      return get(/databases/$(database)/documents/profiles/$(userIdToGetRoleFor)).data.role;
    }

    // Checks if the currently authenticated user has the 'tassologist' role.
    function isTassologist() {
      return isSignedIn() && getUserRole(request.auth.uid) == 'tassologist';
    }

    // Profile Rules
    // {userIdProfile} is the document ID, which should match the user's UID.
    match /profiles/{userIdProfile} {
      allow read: if isSignedIn();
      // User can create their own profile document where the doc ID is their UID.
      allow create: if isOwner(userIdProfile);
      // User can update their own profile, or a tassologist can update any profile.
      allow update: if isSignedIn() && (isOwner(userIdProfile) || isTassologist());
      allow delete: if false; // Disallow client-side deletion of profiles.
    }

    // Readings Rules
    // A "reading" document contains the AI interpretation and later, the Tassologist's manual interpretation for personalized requests.
    match /readings/{readingId} {
      // Any signed-in user can create a reading, but they must set the userId field to their own UID.
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      // The owner of the reading or a tassologist can read it.
      allow read: if isSignedIn() && (isOwner(resource.data.userId) || isTassologist());
      // Only a tassologist can update a reading (e.g., to add their manual interpretation when fulfilling a personalized request).
      allow update: if isSignedIn() && isTassologist();
      allow delete: if false; // Disallow client-side deletion of readings.
    }

    // Personalized Readings Requests Rules
    // A "personalizedReading" document is a request from a user for a tassologist to do a manual reading.
    match /personalizedReadings/{requestId} {
      // Any signed-in user can create a request, and they must set the userId field to their own UID.
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      // The user who created the request (owner) or a tassologist can read it.
      // (Tassologist needs to read the request details to process it).
      allow read: if isSignedIn() && (isOwner(resource.data.userId) || isTassologist());
      // The owner (user, e.g., to update satisfaction) or a Tassologist (e.g., to update status to 'completed') can update.
      allow update: if isSignedIn() && (isOwner(resource.data.userId) || isTassologist());
      allow delete: if false; // Disallow client-side deletion of requests.
    }

    // Mail Collection for Email Trigger (used by Firebase Trigger Email Extension or custom function)
    match /mail/{mailId} {
      allow read: if false; // Client should not read mail queue.
      // Authenticated users (client-side actions or backend functions with auth) can create mail documents.
      // This allows server actions/functions that are authenticated to trigger emails.
      allow write: if isSignedIn();
    }
  }
}
